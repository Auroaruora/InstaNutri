# -*- coding: utf-8 -*-
"""ai_food_info.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vgBVPbT3k8uUfm8MVnkFs2dDOx_iMlAo
"""

!pip install openai

import base64
import openai

openai.api_key = "mykey"

# Function to encode the image
def encode_image(image_path):
  with open(image_path, "rb") as image_file:
    return base64.b64encode(image_file.read()).decode('utf-8')

# Path to your image
#image_path = "/content/Screenshot 2024-11-07 at 6.04.39â€¯PM.png"
image_path = "image_path"

# Getting the base64 string
base64_image = encode_image(image_path)

def get_food_info(image_path):
    response = openai.chat.completions.create(
    model="gpt-4o-mini",
    messages=[
        {"role": "system", "content": "You are a helpful assistant identifying food items from an image and providing calorie details."},
        {
          "role": "user",
          "content": [
            {
              "type": "text",
              "text": "Please analyze the following image to list the food items with their estimated calories and weights.",
            },
            {
              "type": "image_url",
              "image_url": {
                "url":  f"data:image/jpeg;base64,{base64_image}"
              },
            },
          ],
        }
        # {"role": "user", "content": "Please analyze the following image to list the food items"},
        # {"role": "user", "content": f"data:image/jpeg;base64,{base64_image}"}
    ],
    max_tokens = 200,
    response_format={
        "type": "json_schema",
        "json_schema": {
            "name": "food",
            "schema": {
                "type": "object",
                "properties": {
                    "food_items": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {"type": "string"},
                                "weight": {
                                "type": "number",
                                "description": "The estimated weights of the food item in gram."
                            },
                            "calories": {
                                "type": "number",
                                "description": "The estimated calorie count per food item."
                            }
                            },
                            "required": ["name", "weight", "calories"],
                            "additionalProperties": False
                        }
                    },
                },
                "required": ["food_items"],
                "additionalProperties": False
            },
            "strict": True
        }
    }
    )

    return response.choices[0].message


result = get_food_info(image_path)

print(result.content)







